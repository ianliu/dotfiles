call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'ElmCast/elm-vim'
Plug 'sheerun/vim-polyglot'
call plug#end()

command Config edit $MYVIMRC

set hid hls is sc ru wmnu ls=2 bg=dark cino=N-s
set backupcopy=yes
set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
set completeopt=menu,menuone,preview,noselect,noinsert
set splitright

filetype plugin indent on
syntax on

function SendLine(do_trim)
  let text = a:do_trim ? trim(getline('.')) : getline('.')
  call term_sendkeys(t:tab_term, text . "\n")
  norm j
endfunction

nnoremap <leader>e :call SendLine(0)<CR>
nnoremap <leader>E :call SendLine(1)<CR>
cnoremap <c-p> <up>
cnoremap <c-n> <down>

autocmd BufRead,BufWrite *.toml setfiletype dosini
autocmd FileType vim nnoremap <buffer> <leader>e :execute getline('.')<CR>
autocmd FileType haskell setlocal sw=2 et sta
autocmd TerminalOpen * let t:tab_term = bufnr()

function HaskellIde()
  let nr = winnr()
  let fn = expand('%')
  let opts = { 'term_kill': 'term' }
  vert call term_start(['ghcid', '-T', 'main', fn], opts)
  call term_start(['ghci', fn], opts)
  exe nr . "wincmd w"
endfunction

function HtmlIde()
  let nr = winnr()
  let opts = { 'term_kill': 'term' }
  vert call term_start(['python', '-m', 'http.server'], opts)
  !qutebrowser --basedir /tmp/htmlide-vim http://localhost:8000 &
  exe nr . "wincmd w"
  nmap <leader>r :!qutebrowser --basedir /tmp/htmlide-vim :reload<CR>
endfunction
